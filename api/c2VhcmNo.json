[{"title":"MySql数据库基础","date":"2019-06-16T13:33:27.000Z","updated":"2019-06-17T15:58:12.893Z","content":"MySql数据库基础数据库的操作\n数据库的创建\n\ncreate database 数据库的名 character set 字符集 collate 校对规则\n\n\n数据库的删除\n\ndrop database 数据库名\n\n\n数据库的修改\n\nalter database 数据库 character set 字符集(utf8)\n\n\n数据库的查询\n\nshow databases;show create database 数据库名select database();\n\n\n切换数据库\n\nuse 数据库名字\n\n\n修改数据库用户密码\n\nmysql&gt; set password for 用户名@localhost = password(‘新密码’);  \n\n\n\n数据表的操作\n表结构的操作:\n\n1234创建:create table 表名(    列名 列的类型 列的约束,    列名 列的类型 列的约束)\n\n\n123456789101112列的类型:int,double,float,boolean,char(长度)/varchar            date : YYYY-MM-DD            time : hh:mm:ss            datetime : YYYY-MM-DD hh:mm:ss            timestamp: YYYY-MM-DD hh:mm:ss            text : 主要用来存放文本            blob: 存放的是二进制列的约束:            primary key 主键约束            unique:唯一约束            not null非空约束自动增长:auto_increment\n\n\n删除表\n\ndrop table 表名\n\n\n修改表\n\nalter table 表名(add,modify,change,drop)\n\n添加列(add):alter table 表名 add 列名 列的类型 列的约束修改列(modify):alter table 表名 modify 列名 列的类型 列的约束修改列名(change):alter table 表名 change 列名 新列名 列的类型 列的约束删除列(drop):drop table 表名 drop 列名\n\nrename table 旧表名 to 新表名alter table 表名 character set 字符集\n\n\n查询表结构\n\nshow table;查询所有表show create table 表名:表的创建语句,表的定义desc 表名:表的结构\n\n\n\n表中数据的操作\n插入\ninsert into 表名(列名,列名)values(值1,值2);\n\n\n删除\ndelete from 表名 [where 条件]\n\n\n修改\nupdate 表名 set 列名=’值’,列名=’值’[where条件]\n\n\n查询\nselect [distinct] * [列名1,列名2] from 表名 [where 条件]\n\n\n\nwhere条件后面:\n关系运算符: &gt;&gt;=&lt;&lt;=!=&lt;&gt;\n\n判断某一列是否为空:is null | is not nullin 在某范围内进行比较between…and\n\n\n\n逻辑运算符:and or not模糊查询:like\n\n_:代表单个字符%:代表的是多个字符\n\n\n\n分组\n\ngroup by\n\n分组之后条件过滤:having\n\nhaving\n\n聚合函数\n\nsum(),avg(),count(),max(),min()\n\n排序\n\norder by(asc 升序,desc 降序)\n\n\n数据库练习参考123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899查询语句 ---select\tcreate table exam(\t\tid int primary key auto_increment,\t\tname varchar(20) not null,\t\tchinese double,\t\tmath double,\t\tenglish double\t);\tinsert into exam values(null,&apos;关羽&apos;,85,76,70);\tinsert into exam values(null,&apos;张飞&apos;,70,75,70);\tinsert into exam values(null,&apos;赵云&apos;,90,65,95);\tinsert into exam values(null,&apos;刘备&apos;,97,50,50);\tinsert into exam values(null,&apos;曹操&apos;,90,89,80);\tinsert into exam values(null,&apos;司马懿&apos;,90,67,65);\t练习：\t1、查询表中所有学生的信息。 \t   select * from exam;\t2、查询表中所有学生的姓名和对应的英语成绩。\t   select name,english from exam;\t3、过滤表中重复数据。\t   \t4、在所有学生分数上加10分特长分。\t5、统计每个学生的总分。            select *,chinese+math+english from exam;\t6、使用别名表示学生分数。\t   select *,chinese+math+english as 总分 from exam;\t-----使用where子句\t7、查询姓名为刘备的学生成绩\t    select * from exam where name=&apos;刘备&apos;;\t8、查询英语成绩大于90分的同学\t   select * from exam where english&gt;90;\t9、查询总分大于200分的所有同学\t    select * from exam where chinese+math+english&gt;200;\t10、查询英语分数在 80－90之间的同学。             select * from exam where english between 80 and 90;\t      select * from exam where english&gt;=80 and english&lt;=90;\t11、查询数学分数为89,75,91的同学。\t    select * from exam where math=89 or math=75 or math=91;   \t    select * from exam where math in(89,75,91);\t12、查询所有姓刘的学生成绩。\t    select * from exam where name like &apos;刘%&apos;;\t13、查询所有姓刘两个字的学生成绩。\t     select * from exam where name like &apos;刘_&apos;;\t14、查询数学分&gt;80并且语文分&gt;80的同学。\t    select * from exam where math&gt;80 and chinese&gt;80;\t15、查询数学分&gt;80 或者 语文分&gt;80的同学。\t    select * from exam where math&gt;80 or chinese&gt;80;\t------使用order by  排序\t16、对数学成绩排序后输出。\t    select * from exam order by math;\t17、对总分排序按从高到低的顺序输出\t     select *,chinese+math+english as 总分 from exam order by 总分 desc;\t     select *,chinese+math+english as 总分 from exam order by chinese+math+\t     english desc;\t18、对姓刘的学生成绩排序输出\t    select * from exam where name like &apos;刘%&apos; order by math desc;\t------使用count（函数）\t19、统计一个班级共有多少学生？\t    select  count(id) from exam;\t20、统计数学成绩大于或等于90的学生有多少个？\t    select  count(math) from exam where math&gt;=90;\t21、统计总分大于250的人数有多少？\t    select count(id) from exam where chinese+math+english&gt;250;\t-------使用sum函数\t22、统计一个班级数学总成绩？\t    selcet * from exam;\t23、统计一个班级语文、英语、数学各科的总成绩\t    select sum(chinese),sum(math),sum(english) from exam;\t24、统计一个班级语文、英语、数学的成绩总和 \t     select sum(chinese)+sum(math)+sum(english) from exam;\t25、统计一个班级语文成绩平均分\t     select sum(chinese)/count(id) from exam;\t--------使用avg函数\t26、求一个班级数学平均分？\t     select avg(math) from exam;\t27、求一个班级总分平均分\t    select avg(ifnull(chinese,0))+avg(ifnull(math,0))+avg(ifnull(english,0))\t    from exam;\t-------使用max，min函数\t28、求班级最高分和最低分（数值范围在统计中特别有用）\t    select max(ifnull(chinese,0)+ifnull(math,0)+ifnull(english,0)) from exam;\t    select min(ifnull(chinese,0)+ifnull(math,0)+ifnull(english,0)) from exam;\t        create table orders(            id int,            product varchar(20),            price float        );\tinsert into orders(id,product,price) values(1,&apos;电视&apos;,900);\tinsert into orders(id,product,price) values(2,&apos;洗衣机&apos;,100);\tinsert into orders(id,product,price) values(3,&apos;洗衣粉&apos;,90);\tinsert into orders(id,product,price) values(4,&apos;桔子&apos;,9);\tinsert into orders(id,product,price) values(5,&apos;洗衣粉&apos;,90);\t29、查询购买了几类商品，并且每类总价大于100的商品\tselect product,sum(price) from orders where price&gt;100 group by product;","plink":"http://hiasia.club/post/MySql数据库基础/"},{"title":"Linux搭建个人博客","date":"2019-06-14T15:38:11.000Z","updated":"2019-06-17T15:54:50.365Z","content":"Linux系统部署Hexo个人博客到Github\n从官网下载nodejs\n\n\n这里用的是10.15.3 LTS\n  官网地址\n\n\n\n解压下载的压缩包\ntar -xvf node-v10.15.3-linux-x64.tar.xz\n\n\n建立软链接\nln -s /root/node-v10.15.3-linux-x64/bin/npm /usr/bin/npm\nln -s /root/node-v10.15.3-linux-x64/bin/node /usr/local/bin/node\n在linux下输入node -v和npm -v看是否显示版本号,如果有显示则上一步成功\n\n\n安装hexo,并发布本地博客\nnpm install -g hexo-cli\n\n\n等待一段时间(比较慢),安装完毕后,建立软链接\nln -s /root/node-v10.15.3-linux-x64/bin/hexo /usr/bin/hexo\n这样就安装完了.\n\n接下来开始发布博客:\n\n新建一个文件夹blog(名字自己起),cd命令进入目录后执行\nhexo init\n这样,hexo会帮你在blog目录下生产所需要的各种文件\n\n然后执行下面两条命令,发布本地博客\nhexo g\nhexo s\n\n部署到Github\nGithub操作\n\n注册Github账号\n新建一个仓库（头像旁的加号New repository），仓库名为你的昵称.github.io\n完成后回到Linux\n\n\nLinux操作\n\n在blog文件中修改配置文件_config.yml\n\n在最下面的的参数\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/你的昵称/你的昵称.github.io.git\n  branch: master\n安装deploy-git\nnpm install hexo-deployer-git --save\n安装完后把博客部署到GitHub\nhexo clean\nhexo g\nhexo d\n\n\n\n5. 最后一条命令输入完后,要输入github的用户名和密码\n6. 过一会你就可以在http://你的昵称.github.io这个网站看到你的博客了！！","plink":"http://hiasia.club/post/Linux搭建个人博客/"},{"title":"分类","date":"2019-06-17T15:22:02.000Z","updated":"2019-06-17T15:54:52.534Z","content":"","plink":"http://hiasia.club/categorys/"},{"title":"关于","date":"2019-06-17T14:54:15.000Z","updated":"2019-06-17T14:56:58.394Z","content":"","plink":"http://hiasia.club/about/"}]